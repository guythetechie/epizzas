openapi: 3.0.0
info:
  title: EPizzas API
  version: v1
tags:
  - name: Orders
paths:
  /orders:
    get:
      tags:
        - Orders
      operationId: List_list
      description: List orders
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.List.Response'
  /orders/{orderId}:
    get:
      tags:
        - Orders
      operationId: GetById_get
      description: Get order by ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders.GetById.SuccessfulResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    enum:
                      - ResourceNotFound
                  message:
                    type: string
                  details:
                    type: array
                    items: {}
    delete:
      tags:
        - Orders
      operationId: Cancel_cancel
      description: Cancel order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
security:
  - BearerAuth: []
components:
  schemas:
    ETag:
      type: string
      minLength: 1
      description: The ETag.
    Orders.GetById.SuccessfulResponse:
      type: object
      required:
        - eTag
        - pizzas
      properties:
        eTag:
          $ref: '#/components/schemas/ETag'
        pizzas:
          type: array
          items:
            $ref: '#/components/schemas/Pizza'
    Orders.List.Response:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/Orders.OrderId'
              eTag:
                $ref: '#/components/schemas/ETag'
              pizzas:
                type: array
                items:
                  $ref: '#/components/schemas/Pizza'
            required:
              - id
              - eTag
              - pizzas
          description: Current page of results.
        nextPageLink:
          type: string
          format: uri
          description: URL to get the next page of results.
    Orders.OrderId:
      type: string
      minLength: 1
      description: Order ID
    Pizza:
      type: object
      required:
        - size
        - toppings
      properties:
        size:
          $ref: '#/components/schemas/PizzaSize'
        toppings:
          type: array
          items:
            type: object
            properties:
              topping:
                $ref: '#/components/schemas/PizzaTopping'
              amount:
                $ref: '#/components/schemas/PizzaToppingAmount'
            required:
              - topping
              - amount
      description: Pizza
    PizzaSize:
      type: string
      enum:
        - Small
        - Medium
        - Large
      description: Pizza size
    PizzaTopping:
      type: string
      enum:
        - Cheese
        - Pepperoni
        - Sausage
      description: Pizza topping
    PizzaToppingAmount:
      type: string
      enum:
        - Light
        - Normal
        - Extra
      description: Pizza topping amount
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
