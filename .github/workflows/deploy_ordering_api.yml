name: Deploy ordering API

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Release environment
        required: true
        type: choice
        options:
          - dev
          - prod
      API_CONTAINER_IMAGE_TAG:
        description: API container image tag
        required: true
        type: string
        default: 1.0.0

permissions:
  contents: read
  id-token: write
  packages: read

env:
  API_CONTAINER_IMAGE_NAME: epizzas-ordering-api

jobs:
  publish_to_container_registry:
    name: Publish image to container registry
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"

      - name: Publish to container registry
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            Write-Information "Authenticating to GitHub Nuget registry..."
            dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ github.token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
            if ($LASTEXITCODE -ne 0) { throw "Failed to add GitHub Nuget registry."}

            Write-Information "Connecting to Azure Container Registry..."
            $credentials = Get-AzContainerRegistryCredential -Name ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }} -ResourceGroupName "${{ vars.AZURE_RESOURCE_GROUP_NAME }}"        
            Connect-AzContainerRegistry -Name ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }} -UserName "$($credentials.Username)" -Password "$($credentials.Password)" -ErrorAction "SilentlyContinue" 

            Write-Information "Publishing image..."
            $projectPath = Join-Path "${{ github.workspace }}" "ordering" "api" "code" "EPizzas.Ordering.Api" "EPizzas.Ordering.Api.csproj"
            $containerRegistry = Get-AzContainerRegistry -Name "${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}" -ResourceGroupName "${{ vars.AZURE_RESOURCE_GROUP_NAME }}"
            $containerRegistryServerName = $containerRegistry.LoginServer
            dotnet publish "$projectPath" --os linux --arch x64 -p:PublishProfile=DefaultContainer -p:ContainerRegistry="$containerRegistryServerName" -p:ContainerBaseImage="mcr.microsoft.com/dotnet/nightly/aspnet:8.0-preview-jammy-chiseled" -p:ContainerImageName="${{ env.API_CONTAINER_IMAGE_NAME }}"  -p:ContainerImageTag="${{ inputs.API_CONTAINER_IMAGE_TAG }}" --configuration Release

            if ($LASTEXITCODE -ne 0) { throw "Publishing image failed."}
          azPSVersion: "latest"

      - name: Deploy container app
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-StrictMode -Version Latest
            $ErrorActionPreference = "Stop"
            $VerbosePreference = "Continue"
            $InformationPreference = "Continue"

            $deploymentParameters = @{
              ResourceGroupName = "${{ vars.AZURE_RESOURCE_GROUP_NAME }}"
              TemplateFile = Join-Path "${{ github.workspace }}" "ordering" "api" "bicep" "main.bicep"
              TemplateParameterObject = @{
                containerRegistryName = "${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}"
                containerRegistryReaderManagedIdentityName = "${{ vars.AZURE_CONTAINER_READER_MANAGED_IDENTITY_NAME }}"
                containerAppEnvironmentName = "${{ vars.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}"
                apiContainerAppName = "${{ vars.AZURE_API_CONTAINER_APP_NAME }}"
                apiContainerImageName = "${{ env.API_CONTAINER_IMAGE_NAME }}"
                apiContainerImageTag = "${{ inputs.API_CONTAINER_IMAGE_TAG }}"
              }
            }
            New-AzResourceGroupDeployment @deploymentParameters

          azPSVersion: "latest"
